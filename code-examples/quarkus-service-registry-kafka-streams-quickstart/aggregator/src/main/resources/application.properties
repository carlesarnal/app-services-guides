quarkus.kafka-streams.application-id=temperature-aggregator
quarkus.kafka-streams.topics=weather-stations,temperature-values

# streams options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
kafka-streams.auto.offset.reset=earliest
kafka-streams.metrics.recording.level=DEBUG
kafka-streams.consumer.heartbeat.interval.ms=200
# Use sub-folder of embedded broker, so it gets cleaned by KafkaResource between re-runs
# This does not work for native tests, manually clean-up /tmp/kafka-streams/temperature-aggregator
%test.kafka-streams.state.dir=target/data/kafka-data/stores



##Serdes configuration
apicurio.registry.url=${REGISTRY_URL}

apicurio.registry.auto-register=true
apicurio.registry.find-latest=true
apicurio.registry.artifact-resolver-strategy=io.apicurio.registry.serde.avro.strategy.TopicRecordIdStrategy
apicurio.registry.avro-datum-provider=io.apicurio.registry.serde.avro.ReflectAvroDatumProvider

apicurio.auth.realm=${OAUTH_REALM:rhoas}
apicurio.auth.service.url=${OAUTH_SERVER_URL:https://identity.api.openshift.com/auth}
apicurio.auth.client.id=${CLIENT_ID}
apicurio.auth.client.secret=${CLIENT_SECRET}